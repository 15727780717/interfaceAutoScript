{"uid":"77f79ec5462fa661","name":"test_case[pledge_choice_list]","fullName":"testcases.scenario.test_api.TestAPI#test_case","historyId":"80b9b54fddce6ac8bbe839f9b0733521","time":{"start":1745481678716,"stop":1745481678717,"duration":1},"status":"broken","statusMessage":"KeyError: '全局变量key错误: pledgeItemAddress'","statusTrace":"self = <testcases.scenario.test_api.TestAPI object at 0x04DFF6E8>\ncase = {'assertions': [{'eq': ['status_code', 200]}, {'eq': ['$.code', 0]}, {'eq': ['$.msg', 'success']}, {'contains': ['$.re...uest': {'method': 'GET', 'url': '/api/v1/client/pledge_manage/pledge_choice_list?collectAddress=${pledgeItemAddress}'}}\napi_client = <utils.request_handler.RequestHandler object at 0x052948E0>\nauth_headers = {'Content-Type': 'application/json', 'Token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoiMHg3ZGE3YjNjMTBmYmQwNT...hxM3FyIiwibG9naW5UeXBlIjo3LCJpYXQiOjE3NDU0ODE2MjEsImV4cCI6MTc0NTUyNDgyMX0.cjW4x6R4dq4iWFMIIKaKj_zj6VVNqdzA-z3krVx32WE'}\n\n    @pytest.mark.parametrize(\"case\", cases, ids=[case['name'] for case in cases])\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_case(self, case, api_client, auth_headers):\n        with allure.step(\"测试用例名称: {}\".format(case[\"name\"])):\n            # 处理请求参数\n            request_data = case['request']\n            # 发送请求\n            with allure.step(\"发送请求\"):\n                try:\n>                   response = api_client.send_request(\n                        method=request_data['method'],\n                        url=request_data['url'],\n                        headers=auth_headers,\n                        data=request_data.get('data')\n                    )\n\ntestcases\\scenario\\test_api.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\request_handler.py:26: in send_request\n    url = replace_global_params(url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntext = '/api/v1/client/pledge_manage/pledge_choice_list?collectAddress=${pledgeItemAddress}'\n\n    def replace_global_params(text):\n        \"\"\"\n        替换 text 中的 ${变量名} 为全局参数值，若参数不存在则抛出 KeyError\n        :param text: 字符串\n        :return: 替换全局变量参数值后的字符串\n        \"\"\"\n        PATTERN = r'\\$\\{([a-zA-Z_][a-zA-Z0-9_]*)\\}'\n        matches = re.findall(PATTERN, text)\n        for param_name in matches:\n            if param_name in GlobalContext.params:\n                # 将参数值强制转换为字符串\n                param_value = str(GlobalContext.params[param_name])\n                # 使用正则表达式进行准确替换\n                text = re.sub(\n                    rf'\\$\\{{{param_name}}}',\n                    re.escape(param_value),  # 处理参数值中的特殊字符\n                    text\n                )\n            else:\n>               raise KeyError(f\"全局变量key错误: {param_name}\")\nE               KeyError: '全局变量key错误: pledgeItemAddress'\n\nutils\\replace_dynamic_parameters.py:63: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"api_client","time":{"start":1745481678716,"stop":1745481678716,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"KeyError: '全局变量key错误: pledgeItemAddress'","statusTrace":"self = <testcases.scenario.test_api.TestAPI object at 0x04DFF6E8>\ncase = {'assertions': [{'eq': ['status_code', 200]}, {'eq': ['$.code', 0]}, {'eq': ['$.msg', 'success']}, {'contains': ['$.re...uest': {'method': 'GET', 'url': '/api/v1/client/pledge_manage/pledge_choice_list?collectAddress=${pledgeItemAddress}'}}\napi_client = <utils.request_handler.RequestHandler object at 0x052948E0>\nauth_headers = {'Content-Type': 'application/json', 'Token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjoiMHg3ZGE3YjNjMTBmYmQwNT...hxM3FyIiwibG9naW5UeXBlIjo3LCJpYXQiOjE3NDU0ODE2MjEsImV4cCI6MTc0NTUyNDgyMX0.cjW4x6R4dq4iWFMIIKaKj_zj6VVNqdzA-z3krVx32WE'}\n\n    @pytest.mark.parametrize(\"case\", cases, ids=[case['name'] for case in cases])\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_case(self, case, api_client, auth_headers):\n        with allure.step(\"测试用例名称: {}\".format(case[\"name\"])):\n            # 处理请求参数\n            request_data = case['request']\n            # 发送请求\n            with allure.step(\"发送请求\"):\n                try:\n>                   response = api_client.send_request(\n                        method=request_data['method'],\n                        url=request_data['url'],\n                        headers=auth_headers,\n                        data=request_data.get('data')\n                    )\n\ntestcases\\scenario\\test_api.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nutils\\request_handler.py:26: in send_request\n    url = replace_global_params(url)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ntext = '/api/v1/client/pledge_manage/pledge_choice_list?collectAddress=${pledgeItemAddress}'\n\n    def replace_global_params(text):\n        \"\"\"\n        替换 text 中的 ${变量名} 为全局参数值，若参数不存在则抛出 KeyError\n        :param text: 字符串\n        :return: 替换全局变量参数值后的字符串\n        \"\"\"\n        PATTERN = r'\\$\\{([a-zA-Z_][a-zA-Z0-9_]*)\\}'\n        matches = re.findall(PATTERN, text)\n        for param_name in matches:\n            if param_name in GlobalContext.params:\n                # 将参数值强制转换为字符串\n                param_value = str(GlobalContext.params[param_name])\n                # 使用正则表达式进行准确替换\n                text = re.sub(\n                    rf'\\$\\{{{param_name}}}',\n                    re.escape(param_value),  # 处理参数值中的特殊字符\n                    text\n                )\n            else:\n>               raise KeyError(f\"全局变量key错误: {param_name}\")\nE               KeyError: '全局变量key错误: pledgeItemAddress'\n\nutils\\replace_dynamic_parameters.py:63: KeyError","steps":[{"name":"测试用例名称: pledge_choice_list","time":{"start":1745481678716,"stop":1745481678717,"duration":1},"status":"broken","statusMessage":"KeyError: '全局变量key错误: pledgeItemAddress'\n","statusTrace":"  File \"C:\\Users\\16592\\Desktop\\interfaceAutoScript\\testcases\\scenario\\test_api.py\", line 26, in test_case\n    response = api_client.send_request(\n  File \"C:\\Users\\16592\\Desktop\\interfaceAutoScript\\utils\\request_handler.py\", line 26, in send_request\n    url = replace_global_params(url)\n  File \"C:\\Users\\16592\\Desktop\\interfaceAutoScript\\utils\\replace_dynamic_parameters.py\", line 63, in replace_global_params\n    raise KeyError(f\"全局变量key错误: {param_name}\")\n","steps":[{"name":"发送请求","time":{"start":1745481678716,"stop":1745481678716,"duration":0},"status":"broken","statusMessage":"KeyError: '全局变量key错误: pledgeItemAddress'\n","statusTrace":"  File \"C:\\Users\\16592\\Desktop\\interfaceAutoScript\\testcases\\scenario\\test_api.py\", line 26, in test_case\n    response = api_client.send_request(\n  File \"C:\\Users\\16592\\Desktop\\interfaceAutoScript\\utils\\request_handler.py\", line 26, in send_request\n    url = replace_global_params(url)\n  File \"C:\\Users\\16592\\Desktop\\interfaceAutoScript\\utils\\replace_dynamic_parameters.py\", line 63, in replace_global_params\n    raise KeyError(f\"全局变量key错误: {param_name}\")\n","steps":[],"attachments":[{"uid":"f4783d2c41c2a8e","name":"请求异常","source":"f4783d2c41c2a8e.attach","type":"text/plain","size":42}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":false,"stepsCount":1,"attachmentStep":false,"hasContent":true}],"attachments":[],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":2,"attachmentStep":false,"hasContent":true},"afterStages":[{"name":"api_client::0","time":{"start":1745481678722,"stop":1745481678722,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"attachmentStep":false,"hasContent":false}],"labels":[{"name":"severity","value":"critical"},{"name":"feature","value":"API测试"},{"name":"parentSuite","value":"testcases.scenario"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestAPI"},{"name":"host","value":"Partyverse"},{"name":"thread","value":"2320-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.scenario.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"case","value":"{'name': 'pledge_choice_list', 'request': {'method': 'GET', 'url': '/api/v1/client/pledge_manage/pledge_choice_list?collectAddress=${pledgeItemAddress}'}, 'assertions': [{'eq': ['status_code', 200]}, {'eq': ['$.code', 0]}, {'eq': ['$.msg', 'success']}, {'contains': ['$.result[0]', 'tokenId']}]}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"77f79ec5462fa661.json","parameterValues":["{'name': 'pledge_choice_list', 'request': {'method': 'GET', 'url': '/api/v1/client/pledge_manage/pledge_choice_list?collectAddress=${pledgeItemAddress}'}, 'assertions': [{'eq': ['status_code', 200]}, {'eq': ['$.code', 0]}, {'eq': ['$.msg', 'success']}, {'contains': ['$.result[0]', 'tokenId']}]}"]}